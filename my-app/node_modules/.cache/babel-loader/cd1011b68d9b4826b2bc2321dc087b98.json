{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\home\\\\Desktop\\\\netflix-clone\\\\my-app\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]); // A snippet of code which run based on specific condition\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row__poster\",\n        src: `${base_url}${movie.poster_path}`,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/home/Desktop/netflix-clone/my-app/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","data","results","console","table","map","movie","poster_path","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAGA,MAAMC,QAAQ,GAAG,qCAAjB;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAb,EAAiC;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAD6B,CAG7B;;AACDC,EAAAA,SAAS,CAAC,MAAM;AAEf,mBAAeQ,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUL,QAAV,CAAtB;AACAE,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACT,GARQ,EAQN,CAACH,QAAD,CARM,CAAT;AAUAQ,EAAAA,OAAO,CAACC,KAAR,CAAcR,MAAd;AAGC,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAGA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAGKE,MAAM,CAACS,GAAP,CAAWC,KAAK,iBAEL;AACO,QAAA,SAAS,EAAC,aADjB;AAED,QAAA,GAAG,EAAG,GAAEd,QAAS,GAAEc,KAAK,CAACC,WAAY,EAFpC;AAEuC,QAAA,GAAG,EAAED,KAAK,CAACE;AAFlD;AAAA;AAAA;AAAA;AAAA,cAFX;AAHL;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAlCQf,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\n\r\n\r\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title, fetchUrl }) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    // A snippet of code which run based on specific condition\r\n   useEffect(() => {\r\n    \r\n    async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n        setMovies(request.data.results);\r\n        return request;\r\n    }\r\n    fetchData();\r\n   }, [fetchUrl]);\r\n\r\n   console.table(movies);\r\n\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n        <div className=\"row__posters\">\r\n            {/* sevral row__posters */}\r\n\r\n            {movies.map(movie=>(\r\n                \r\n                        <img \r\n                               className=\"row__poster\"\r\n                       src={`${base_url}${movie.poster_path}`} alt={movie.name} />\r\n            ))}\r\n        </div>\r\n            {/* Container -> Poster */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;"]},"metadata":{},"sourceType":"module"}